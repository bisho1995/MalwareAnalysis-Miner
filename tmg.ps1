# This seems like a bittorrent client

Function HexToByteArray {
    [cmdletbinding()]
    param(
        [parameter(Mandatory = $true)]
        [String]
        $hexstr
    )
    $barray = [byte[]]::new($hexstr.Length / 2)
    For ($i = 0; $i -lt $hexstr.Length; $i += 2) {
        $barray[$i / 2] = [convert]::ToByte($hexstr.Substring($i, 2), 16)
    }
    $barray
}



$tracker = $args[0]
$port = $args[1]
$infohashstr = $args[2]
$chance = $args[3]


# why generating random bytes ??
$bytes = 0, 0, 4, 23, 39, 16, 25, 128, 0, 0, 0, 0
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1

# init
$udpobject = new-Object system.Net.Sockets.Udpclient
$udpobject.Connect($tracker, $port)
$udpobject.Client.ReceiveTimeout = 1000


# connect
[void]$udpobject.Send($bytes, $bytes.length)
$remoteendpoint = New-Object system.net.ipendpoint([system.net.ipaddress]::Any, 0)


Try {
    $receivebytes = $udpobject.Receive([ref]$remoteendpoint)
}
Catch {
    Write-Output "nn"
}
If (-Not $receivebytes) {
    $udpobject.Close()
    exit
}

# announce
$peerId = 45, 85, 77, 49, 56, 55, 48, 45, 170, 184, 186, 102, 153, 48, 94, 239
$peerId += Get-Random -Maximum 200 -Minimum 1
$peerId += Get-Random -Maximum 200 -Minimum 1
$peerId += Get-Random -Maximum 200 -Minimum 1
$peerId += Get-Random -Maximum 200 -Minimum 1

$infohashbytes = HexToByteArray $infohashstr

$bytes = @()
$bytes = $receivebytes[8], $receivebytes[9], $receivebytes[10], $receivebytes[11], $receivebytes[12], $receivebytes[13], $receivebytes[14], $receivebytes[15] # connection id
$bytes += 0, 0, 0, 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += $infohashbytes
$bytes += $peerId


# downloaded
$bytes += 0, 0, 0, 0
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1


# left
$rnd = Get-Random -Maximum 100 -Minimum 1
$seed = $true
If ($rnd > $chance) {
    $bytes += 0, 0, 0, 0
    $bytes += Get-Random -Maximum 200 -Minimum 1
    $bytes += Get-Random -Maximum 200 -Minimum 1
    $bytes += Get-Random -Maximum 200 -Minimum 1
    $bytes += Get-Random -Maximum 200 -Minimum 1
}
else {
    $bytes += 0, 0, 0, 0, 0, 0, 0, 0
}

# uploaded
$bytes += 0, 0, 0, 0
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1

$bytes += 0, 0, 0, 2
$bytes += 0, 0, 0, 0
$bytes += $peerId[16], $peerId[17], $peerId[18], $peerId[19]
$bytes += 255, 255, 255, 255
$bytes += Get-Random -Maximum 200 -Minimum 1
$bytes += Get-Random -Maximum 200 -Minimum 1

[void]$udpobject.Send($bytes, $bytes.length)
$udpobject.Close()
